{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan-Projects\\\\quizapp-ty\\\\src\\\\components\\\\QuestionCard.tsx\";\nimport React from \"react\"; // types\n\nconst QuestionCard = ({\n  question,\n  questionNo,\n  callback,\n  userAnswer,\n  totalQuestion,\n  answers\n}) => {\n  const AnswerDisplay = answers.map(answer => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: userAnswer ? true : false,\n      value: answer,\n      onClick: callback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: answer\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Question \", questionNo, \" / \", totalQuestion)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), AnswerDisplay);\n};\n\nexport default QuestionCard;","map":{"version":3,"sources":["E:/Hasan-Projects/quizapp-ty/src/components/QuestionCard.tsx"],"names":["React","QuestionCard","question","questionNo","callback","userAnswer","totalQuestion","answers","AnswerDisplay","map","answer","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAYA,MAAMC,YAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,UAFqC;AAGrCC,EAAAA,QAHqC;AAIrCC,EAAAA,UAJqC;AAKrCC,EAAAA,aALqC;AAMrCC,EAAAA;AANqC,CAAD,KAOhC;AACJ,QAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI;AAC1C,wBACA;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,QAAQ,EAAEL,UAAU,GAAG,IAAH,GAAU,KAAtC;AAA6C,MAAA,KAAK,EAAEK,MAApD;AAA4D,MAAA,OAAO,EAAEN,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,uBAAuB,EAAE;AAAEO,QAAAA,MAAM,EAAED;AAAV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADA;AAMA,GAPoB,CAAtB;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYP,UADZ,SAC2BG,aAD3B,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,uBAAuB,EAAE;AAAEK,MAAAA,MAAM,EAAET;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASGM,aATH,CADF;AAaD,CA7BD;;AA8BA,eAAeP,YAAf","sourcesContent":["import React from \"react\";\r\n\r\n// types\r\nimport { AnswersObject } from '../App'\r\n\r\ntype Props = {\r\n  question: string;\r\n  answers: string[];\r\n  userAnswer: AnswersObject | undefined;\r\n  questionNo: number;\r\n  callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  totalQuestion: number;\r\n};\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n  question,\r\n  questionNo,\r\n  callback,\r\n  userAnswer,\r\n  totalQuestion,\r\n  answers\r\n}) => {\r\n  const AnswerDisplay = answers.map(answer => {\r\n    return(\r\n    <div key={answer}>\r\n      <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\r\n        <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n      </button>\r\n    </div>\r\n  )})\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          Question {questionNo} / {totalQuestion}\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <p dangerouslySetInnerHTML={{ __html: question }} />\r\n      </div>\r\n      {AnswerDisplay}\r\n    </div>\r\n  );\r\n};\r\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}