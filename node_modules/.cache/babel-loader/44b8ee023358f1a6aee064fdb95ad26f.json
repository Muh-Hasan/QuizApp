{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan-Projects\\\\quizapp-ty\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\"; // components\n\n// api and type\nimport { fetchQuestion, Difficulty } from './Api';\nexport default function App() {\n  const totalQuestion = 10; // setting states \n\n  const [loading, setloading] = useState(false);\n  const [question, setquestion] = useState([]);\n  const [number, setnumber] = useState(0);\n  const [userAnswer, setAnswer] = useState([]);\n  const [score, setscore] = useState(0);\n  const [gameOver, setgameOver] = useState(true); // funtions\n\n  const startQuiz = async () => {\n    setloading(true);\n    setgameOver(false);\n    const newQuestion = await fetchQuestion(totalQuestion, Difficulty.EASY);\n    setquestion(newQuestion);\n    setscore(0);\n    setAnswer([]);\n    setnumber(0);\n    setloading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Quiz App\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Start Quiz\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Socre\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"loading ......\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Next Question\")));\n}","map":{"version":3,"sources":["E:/Hasan-Projects/quizapp-ty/src/App.tsx"],"names":["React","useState","fetchQuestion","Difficulty","App","totalQuestion","loading","setloading","question","setquestion","number","setnumber","userAnswer","setAnswer","score","setscore","gameOver","setgameOver","startQuiz","newQuestion","EASY","checkAnswer","e","nextQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,cAAP,C,CAEA;;AAGA;AACA,SAASC,aAAT,EAAyBC,UAAzB,QAA4D,OAA5D;AAEA,eAAe,SAASC,GAAT,GAAe;AAS5B,QAAMC,aAAa,GAAG,EAAtB,CAT4B,CAU5B;;AACA,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACO,QAAD,EAAYC,WAAZ,IAA2BR,QAAQ,CAAmB,EAAnB,CAAzC;AACA,QAAM,CAACS,MAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACW,UAAD,EAAcC,SAAd,IAA2BZ,QAAQ,CAAkB,EAAlB,CAAzC;AACA,QAAM,CAACa,KAAD,EAASC,QAAT,IAAqBd,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACe,QAAD,EAAYC,WAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C,CAhB4B,CAqB5B;;AACA,QAAMiB,SAAS,GAAG,YAAY;AAC5BX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEA,UAAME,WAAW,GAAG,MAAMjB,aAAa,CAACG,aAAD,EAAiBF,UAAU,CAACiB,IAA5B,CAAvC;AACAX,IAAAA,WAAW,CAACU,WAAD,CAAX;AACAJ,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVD;;AAWA,QAAMc,WAAW,GAAIC,CAAD,IAA4C,CAAE,CAAlE;;AACA,QAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,IAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAHF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAjBF,CADF;AAuBD","sourcesContent":["import React , { useState } from \"react\";\nimport \"./styles.css\";\n\n// components\nimport QuestionCard from \"./components/QuestionCard\";\n\n// api and type\nimport { fetchQuestion , Difficulty , QuestionsState } from './Api'\n\nexport default function App() {\n\n  type AnswersObject = {\n    question : string,\n    answer : string,\n    correct : boolean,\n    correctAnswer : string\n  }\n  \n  const totalQuestion = 10\n  // setting states \n  const [loading , setloading] = useState(false)\n  const [question , setquestion] = useState<QuestionsState[]>([])\n  const [number , setnumber] = useState(0)\n  const [userAnswer , setAnswer] = useState<AnswersObject[]>([])\n  const [score , setscore] = useState(0)\n  const [gameOver , setgameOver ] = useState(true)\n\n  \n  \n\n  // funtions\n  const startQuiz = async () => {\n    setloading(true)\n    setgameOver(false)\n\n    const newQuestion = await fetchQuestion(totalQuestion , Difficulty.EASY)\n    setquestion(newQuestion)\n    setscore(0)\n    setAnswer([])\n    setnumber(0)\n    setloading(false) \n  };\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n  const nextQuestion = () => {};\n  return (\n    <div>\n      <h1>Quiz App</h1>\n      <button onClick={startQuiz}>Start Quiz</button>\n      <div>\n        <p>Socre</p>\n        <p>loading ......</p>\n      </div>\n      <div>\n        {/* <QuestionCard \n          question={question[number].question}\n          questionNo={number + 1}\n          callback={checkAnswer}\n          userAnswer={userAnswer ? userAnswer[number] : undefined}\n          totalQuestion={totalQuestion}\n          answers={question[number].answers}\n        /> */}\n      </div>\n      <div>\n        <button onClick={nextQuestion}>Next Question</button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}