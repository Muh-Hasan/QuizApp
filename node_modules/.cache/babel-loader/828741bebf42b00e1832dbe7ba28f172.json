{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan-Projects\\\\quizapp-ty\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\"; // components\n\nimport QuestionCard from \"./components/QuestionCard\"; // api and type\n\nimport { fetchQuestion } from './Api';\nexport default function App() {\n  let diff = null; // console.log(diff);\n\n  const totalQuestion = 10; // setting states \n\n  const [loading, setloading] = useState(false);\n  const [question, setquestion] = useState([]);\n  const [number, setnumber] = useState(0);\n  const [userAnswer, setAnswer] = useState([]);\n  const [score, setscore] = useState(0);\n  const [gameOver, setgameOver] = useState(true); // funtions\n\n  const startQuiz = async () => {\n    setloading(true);\n    setgameOver(false);\n    const newQuestion = await fetchQuestion(totalQuestion, Difficulty.EASY);\n    setquestion(newQuestion);\n    setscore(0);\n    setAnswer([]);\n    setnumber(0);\n    setloading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = question[number].correct_answer === answer;\n      if (correct) setscore(num => num + 1);\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      };\n      setAnswer(num => [...num, answersObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const next = number + 1;\n\n    if (next === totalQuestion) {\n      setgameOver(true);\n    } else {\n      setnumber(next);\n    }\n  };\n\n  const getDifficulty = e => {\n    diff = e.currentTarget.value;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Quiz App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    value: 'easy',\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: 'medium',\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: 'hard',\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Hard\")), gameOver || userAnswer.length === totalQuestion ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Start Quiz\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, !gameOver ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }\n  }, \"Socre : \", score) : null, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"loading ......\")), !loading && !gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCard, {\n    question: question[number].question,\n    questionNo: number + 1,\n    callback: checkAnswer,\n    userAnswer: userAnswer ? userAnswer[number] : undefined,\n    totalQuestion: totalQuestion,\n    answers: question[number].answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), !gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Next Question\")) : null);\n}","map":{"version":3,"sources":["E:/Hasan-Projects/quizapp-ty/src/App.tsx"],"names":["React","useState","QuestionCard","fetchQuestion","App","diff","totalQuestion","loading","setloading","question","setquestion","number","setnumber","userAnswer","setAnswer","score","setscore","gameOver","setgameOver","startQuiz","newQuestion","Difficulty","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","num","answersObject","correctAnswer","nextQuestion","next","getDifficulty","length","undefined","answers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// components\nimport QuestionCard from \"./components/QuestionCard\";\n\n// api and type\nimport { fetchQuestion, QuestionsState } from './Api'\n\nexport type AnswersObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nexport default function App() {\n\n  \n  let diff = null;\n\n  // console.log(diff);\n  \n  const totalQuestion = 10\n  // setting states \n  const [loading, setloading] = useState(false)\n  const [question, setquestion] = useState<QuestionsState[]>([])\n  const [number, setnumber] = useState(0)\n  const [userAnswer, setAnswer] = useState<AnswersObject[]>([])\n  const [score, setscore] = useState(0)\n  const [gameOver, setgameOver] = useState(true)\n  // funtions\n  const startQuiz = async () => {\n    setloading(true)\n    setgameOver(false)\n\n    const newQuestion = await fetchQuestion(totalQuestion, Difficulty.EASY)\n    setquestion(newQuestion)\n    setscore(0)\n    setAnswer([])\n    setnumber(0)\n    setloading(false)\n  };\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n\n      const answer = e.currentTarget.value\n      const correct = question[number].correct_answer === answer\n\n      if (correct) setscore(num => num + 1)\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      }\n      setAnswer((num) => [...num, answersObject])\n\n    }\n  };\n  const nextQuestion = () => {\n    const next = number + 1\n    if (next === totalQuestion) {\n      setgameOver(true)\n    } else {\n      setnumber(next)\n    }\n  };\n  const getDifficulty = (e: React.MouseEvent<HTMLButtonElement>) => {\n    diff = e.currentTarget.value\n  }\n\n  return (\n    <div>\n      <h1>Quiz App</h1>\n      <div>\n        <button value={'easy'} onClick={getDifficulty}>Easy</button>\n        <button value={'medium'} onClick={getDifficulty}>Medium</button>\n        <button value={'hard'} onClick={getDifficulty}>Hard</button>\n      </div>\n      {gameOver || userAnswer.length === totalQuestion ? (\n        <button onClick={startQuiz}>Start Quiz</button>\n      ) : null}\n      <div>\n        {!gameOver ? <p>Socre : {score}</p> : null}\n        {loading && <p>loading ......</p>}\n      </div>\n\n      {!loading && !gameOver && (\n        <div>\n          <QuestionCard\n            question={question[number].question}\n            questionNo={number + 1}\n            callback={checkAnswer}\n            userAnswer={userAnswer ? userAnswer[number] : undefined}\n            totalQuestion={totalQuestion}\n            answers={question[number].answers}\n          />\n        </div>\n      )}\n\n      {!gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? (\n        <div>\n          <button onClick={nextQuestion}>Next Question</button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}