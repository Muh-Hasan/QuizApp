{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan-Projects\\\\quizapp-ty\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\"; // components\n\nimport QuestionCard from \"./components/QuestionCard\"; // api and type\n\nimport { fetchQuestion, Difficulty } from './Api';\nexport default function App() {\n  const totalQuestion = 10; // setting states \n\n  const [loading, setloading] = useState(false);\n  const [question, setquestion] = useState([]);\n  const [number, setnumber] = useState(0);\n  const [userAnswer, setAnswer] = useState([]);\n  const [score, setscore] = useState(0);\n  const [gameOver, setgameOver] = useState(true);\n  const [timer, set]; // funtions\n\n  const startQuiz = async () => {\n    setloading(true);\n    setgameOver(false);\n    const newQuestion = await fetchQuestion(totalQuestion, Difficulty.EASY);\n    setquestion(newQuestion);\n    setscore(0);\n    setAnswer([]);\n    setnumber(0);\n    setloading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = question[number].correct_answer === answer;\n      if (correct) setscore(num => num + 1);\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      };\n      setAnswer(num => [...num, answersObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const next = number + 1;\n\n    if (next === totalQuestion) {\n      setgameOver(true);\n    } else {\n      setnumber(next);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"hello\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Quiz App\"), gameOver || userAnswer.length === totalQuestion ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Start Quiz\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, !gameOver ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }, \"Socre : \", score) : null, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"loading ......\")), !loading && !gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCard, {\n    question: question[number].question,\n    questionNo: number + 1,\n    callback: checkAnswer,\n    userAnswer: userAnswer ? userAnswer[number] : undefined,\n    totalQuestion: totalQuestion,\n    answers: question[number].answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), !gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Next Question\")) : null);\n}","map":{"version":3,"sources":["E:/Hasan-Projects/quizapp-ty/src/App.tsx"],"names":["React","useState","QuestionCard","fetchQuestion","Difficulty","App","totalQuestion","loading","setloading","question","setquestion","number","setnumber","userAnswer","setAnswer","score","setscore","gameOver","setgameOver","timer","set","startQuiz","newQuestion","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","num","answersObject","correctAnswer","nextQuestion","next","length","undefined","answers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// components\nimport QuestionCard from \"./components/QuestionCard\";\n\n// api and type\nimport { fetchQuestion, Difficulty, QuestionsState } from './Api'\n\nexport type AnswersObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nexport default function App() {\n\n\n  const totalQuestion = 10\n  // setting states \n  const [loading, setloading] = useState(false)\n  const [question, setquestion] = useState<QuestionsState[]>([])\n  const [number, setnumber] = useState(0)\n  const [userAnswer, setAnswer] = useState<AnswersObject[]>([])\n  const [score, setscore] = useState(0)\n  const [gameOver, setgameOver] = useState(true)\n  const [timer , set]\n\n  // funtions\n  const startQuiz = async () => {\n    setloading(true)\n    setgameOver(false)\n\n    const newQuestion = await fetchQuestion(totalQuestion, Difficulty.EASY)\n    setquestion(newQuestion)\n    setscore(0)\n    setAnswer([])\n    setnumber(0)\n    setloading(false)\n  };\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n\n      const answer = e.currentTarget.value\n      const correct = question[number].correct_answer === answer\n\n      if (correct) setscore(num => num + 1)\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      }\n      setAnswer((num) => [...num , answersObject])\n\n    }\n  };\n  const nextQuestion = () => { \n    const next = number + 1\n    if (next === totalQuestion){\n      setgameOver(true)\n    } else{\n      setnumber(next)\n    }\n  };\n  return (\n    <div>\n      <div>\n        <h1>hello</h1>\n      </div>\n      <h1>Quiz App</h1>\n      {gameOver || userAnswer.length === totalQuestion ? (\n        <button onClick={startQuiz}>Start Quiz</button>\n      ) : null}\n      <div>\n      {!gameOver ? <p>Socre : {score}</p> : null}\n        {loading && <p>loading ......</p>}\n      </div>\n\n      {!loading && !gameOver && (\n        <div>\n          <QuestionCard\n            question={question[number].question}\n            questionNo={number + 1}\n            callback={checkAnswer}\n            userAnswer={userAnswer ? userAnswer[number] : undefined}\n            totalQuestion={totalQuestion}\n            answers={question[number].answers}\n          />\n        </div>\n      )}\n\n      {!gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? (\n        <div>\n          <button onClick={nextQuestion}>Next Question</button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}