{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan-Projects\\\\quizapp-ty\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\"; // components\n\nimport QuestionCard from \"./components/QuestionCard\"; // api and type\n\nimport { fetchQuestion } from './Api';\nexport default function App() {\n  let interval = undefined;\n  const totalQuestion = 10; // setting states \n\n  const [loading, setloading] = useState(false);\n  const [question, setquestion] = useState([]);\n  let [number, setnumber] = useState(0);\n  const [userAnswer, setAnswer] = useState([]);\n  const [score, setscore] = useState(0);\n  const [gameOver, setgameOver] = useState(true); // options\n\n  const [diff, setdiff] = useState('easy');\n  const [category, setCategory] = useState('9'); // timer \n\n  let [min, setmin] = useState(0);\n  let [sec, setsec] = useState(0); // funtions\n  // start\n\n  const startQuiz = async () => {\n    setloading(true);\n    setgameOver(false);\n    const newQuestion = await fetchQuestion(totalQuestion, diff, category);\n    setquestion(newQuestion);\n    setscore(0);\n    setAnswer([]);\n    setnumber(0);\n    setloading(false);\n    interval = setInterval(timer, 1000);\n  }; // checking answers \n\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = question[number].correct_answer === answer;\n      if (correct) setscore(num => num + 1);\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      };\n      setAnswer(num => [...num, answersObject]);\n    }\n  }; // next question\n\n\n  function nextQuestion() {\n    const next = number + 1;\n\n    if (next === totalQuestion) {\n      setgameOver(true);\n    } else {\n      setnumber(number = next);\n    }\n  }\n\n  ;\n\n  function timer() {\n    setsec(sec++);\n\n    if (sec === 60) {\n      setmin(min++);\n      setsec(sec = 0);\n    } else if (min === 1) {\n      clearInterval(interval);\n    }\n  }\n\n  const getDifficulty = e => {\n    setdiff(e.currentTarget.value);\n  };\n\n  const getCategory = e => {\n    setCategory(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, min, \":\", sec), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Quiz App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    value: \"easy\",\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"medium\",\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"hard\",\n    onClick: getDifficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Hard\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"General Knowledge\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Music\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Science And Nature\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Computer\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"History\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getCategory,\n    value: \"21\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Sports\")), gameOver || userAnswer.length === totalQuestion ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Start Quiz\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, !gameOver ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 22\n    }\n  }, \"Socre : \", score) : null, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"loading ......\")), !loading && !gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCard, {\n    question: question[number].question,\n    questionNo: number + 1,\n    callback: checkAnswer,\n    userAnswer: userAnswer ? userAnswer[number] : undefined,\n    totalQuestion: totalQuestion,\n    answers: question[number].answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), !gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Next Question\")) : null);\n}","map":{"version":3,"sources":["E:/Hasan-Projects/quizapp-ty/src/App.tsx"],"names":["React","useState","QuestionCard","fetchQuestion","App","interval","undefined","totalQuestion","loading","setloading","question","setquestion","number","setnumber","userAnswer","setAnswer","score","setscore","gameOver","setgameOver","diff","setdiff","category","setCategory","min","setmin","sec","setsec","startQuiz","newQuestion","setInterval","timer","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","num","answersObject","correctAnswer","nextQuestion","next","clearInterval","getDifficulty","getCategory","length","answers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// components\nimport QuestionCard from \"./components/QuestionCard\";\n\n// api and type\nimport { fetchQuestion, QuestionsState } from './Api'\n\nexport type AnswersObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nexport default function App() {\n\n  let interval = undefined;\n \n  const totalQuestion = 10\n  // setting states \n  const [loading, setloading] = useState(false)\n  const [question, setquestion] = useState<QuestionsState[]>([])\n  let [number, setnumber] = useState(0)\n  const [userAnswer, setAnswer] = useState<AnswersObject[]>([])\n  const [score, setscore] = useState(0)\n  const [gameOver, setgameOver] = useState(true)\n  \n  // options\n  const [diff, setdiff] = useState('easy')\n  const [category, setCategory] = useState('9')\n \n  // timer \n  let [min , setmin] = useState(0)\n  let [sec , setsec] = useState(0)\n  \n  // funtions\n\n  // start\n  const startQuiz = async () => {\n    setloading(true)\n    setgameOver(false)\n\n    const newQuestion = await fetchQuestion(totalQuestion, diff, category)\n    setquestion(newQuestion)\n    setscore(0)\n    setAnswer([])\n    setnumber(0)\n    setloading(false)\n    interval = setInterval(timer , 1000);\n  }\n\n  // checking answers \n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n\n      const answer = e.currentTarget.value\n      const correct = question[number].correct_answer === answer\n\n      if (correct) setscore(num => num + 1)\n      const answersObject = {\n        question: question[number].question,\n        answer,\n        correct,\n        correctAnswer: question[number].correct_answer\n      }\n      setAnswer((num) => [...num, answersObject])\n\n    }\n  };\n\n  // next question\n  function nextQuestion() {\n    const next = number + 1\n    if (next === totalQuestion) {\n      setgameOver(true)\n    } else {\n      setnumber(number = next)\n    }\n    \n  };\n  function timer() {\n    setsec(sec++)  \n    if (sec === 60){\n        setmin(min++)\n        setsec(sec = 0)\n    }else if (min === 1){\n      clearInterval(interval)\n    }\n}\n\n  const getDifficulty = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setdiff(e.currentTarget.value)\n  }\n  const getCategory = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setCategory(e.currentTarget.value)\n  }\n\n  return (\n    <div>\n      <h1>{min}:{sec}</h1>\n      <h1>Quiz App</h1>\n      <div>\n        <button value='easy' onClick={getDifficulty}>Easy</button>\n        <button value='medium' onClick={getDifficulty}>Medium</button>\n        <button value='hard' onClick={getDifficulty}>Hard</button>\n      </div>\n      <div>\n        <button onClick={getCategory} value='9'>General Knowledge</button>\n        <button onClick={getCategory} value='12'>Music</button>\n        <button onClick={getCategory} value='17'>Science And Nature</button>\n        <button onClick={getCategory} value='18'>Computer</button>\n        <button onClick={getCategory} value='23'>History</button>\n        <button onClick={getCategory} value='21'>Sports</button>\n      </div>\n      {gameOver || userAnswer.length === totalQuestion ? (\n        <button onClick={startQuiz}>Start Quiz</button>\n      ) : null}\n      <div>\n        {!gameOver ? <p>Socre : {score}</p> : null}\n        {loading && <p>loading ......</p>}\n      </div>\n\n      {!loading && !gameOver && (\n        <div>\n          <QuestionCard\n            question={question[number].question}\n            questionNo={number + 1}\n            callback={checkAnswer}\n            userAnswer={userAnswer ? userAnswer[number] : undefined}\n            totalQuestion={totalQuestion}\n            answers={question[number].answers}\n          />\n        </div>\n      )}\n\n      {!gameOver && !loading && userAnswer.length === number + 1 && number !== totalQuestion - 1 ? (\n        <div>\n          <button onClick={nextQuestion}>Next Question</button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}